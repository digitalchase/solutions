//Немного истории. Почти все адекватные браузеры работают на движке хромиум или на движке firefox, даже Edge переходит на хромиум. Но есть в нашей дружной семье браузеров, один маленький уродец который занимает 4% от рынка, и звать его Webkit, люди которые пишут много css кода должны знать вот такой префикс -webkit- специально для этого маленького, глупого уродца.

//Короче проблема в том, что он довольно плохо, по каким то мне не ведомым причинам работает со свойством transform. Вот собираетесь вы изменить масштаб картинки, а он вам ее, обрежет на половине, забудет отрендерить, или захотите вы открыть модальное окно при помощи этого свойства, он вам забудет часть контента в нем отрисовать, примеров куча. И странная работа свойства transform, это не единственная проблема.

Ниже собираем способы для адекватной работы с Safari

1) На маках отсутствует плавный скролл (кроме головного контейнера)
Для того, что бы это пофиксить, необходимо на элементы внутри которых есть или будет скролл добавить css свойство  -webkit-overflow-scrolling: touch;

2) Открытие всяких модалок путем выезжания из за экрана, не используйте transform по причинам написаным выше, используйте top, left ...
Для того, что бы была возможность для нормальных браузеров использовать transform, а для сафари top, left ... 
Можно сделать следующие:
2.1) Пишем самовызывающуюся функцию определения браузера или просим бекенд определить браузер, после добавляем в html аттрибут data-browser="..."
(function () {
    var ua = navigator.userAgent;
    if (ua.match(/MSIE/)) return;
    if (ua.match(/Firefox/)) return;
    if (ua.match(/Opera/)) return;
    if (ua.match(/Chrome/)) return;
    if (ua.match(/Safari/)) {
        $('html').attr('data-browser', 'safari'); //В нашем случае мы ищем сафари
        return;
    };
    
})();

2.3) После пишим стили
SCSS: 
//Для нормальных браузеров
selector {
  transfrom: translateX(0);
  &-active {
    transfrom: translateX(300px);
  }
}

//Для сафари
Эти стили будут важнее, просто по селекторам, поэтому то, что выше нам необходимо отменить только состояние поумолчанию
[data-browser="safari"] {
  selector {
    transform: none;
    left: 0;
    &-active {
      left: 300px;
    }
  }
}



3) Где то тут же лежит хак по отмене transition до загрузки страницы, его тоже нужно использовать
html[data-noTransition="true"] * {
  -webkit-transition: none !important;
  -moz-transition: none !important;
  -ms-transition: none !important;
  -o-transition: none !important;
  transition: none *
} 

Это прервет любые анимации и трансформации, а после загрузки стараницы его необходимо удалить, ниже пример на jquery
$(window).load(function() {
    $('html').attr('data-noTransition') == 'true' ? $('html').attr('data-noTransition', 'false') : '';
});


4) Иногда всякие странные люди просят на сафари отключить стандартные элементы в инпут. Есть целый ряд css свойств для этого.
НО, никогда не трогайте input::-webkit-textfield-decoration-container, не пишите ей display: none или еще что то. Она отключает у инпут placeholder
